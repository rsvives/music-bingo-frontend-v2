/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SingOutRouteImport } from './routes/sing-out'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemoClerkRouteImport } from './routes/demo.clerk'
import { Route as AuthRoomRouteImport } from './routes/_auth/room'
import { Route as AuthGame_overRouteImport } from './routes/_auth/game_over'
import { Route as AuthRoomRoomIdRouteImport } from './routes/_auth/room_.$roomId'
import { Route as AuthRoomJoinRoomIdRouteImport } from './routes/_auth/room_.join.$roomId'

const SingOutRoute = SingOutRouteImport.update({
  id: '/sing-out',
  path: '/sing-out',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoClerkRoute = DemoClerkRouteImport.update({
  id: '/demo/clerk',
  path: '/demo/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoomRoute = AuthRoomRouteImport.update({
  id: '/room',
  path: '/room',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthGame_overRoute = AuthGame_overRouteImport.update({
  id: '/game_over',
  path: '/game_over',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthRoomRoomIdRoute = AuthRoomRoomIdRouteImport.update({
  id: '/room_/$roomId',
  path: '/room/$roomId',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthRoomJoinRoomIdRoute = AuthRoomJoinRoomIdRouteImport.update({
  id: '/room_/join/$roomId',
  path: '/room/join/$roomId',
  getParentRoute: () => AuthRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/sing-out': typeof SingOutRoute
  '/game_over': typeof AuthGame_overRoute
  '/room': typeof AuthRoomRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/room/$roomId': typeof AuthRoomRoomIdRoute
  '/room/join/$roomId': typeof AuthRoomJoinRoomIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/sing-out': typeof SingOutRoute
  '/game_over': typeof AuthGame_overRoute
  '/room': typeof AuthRoomRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/room/$roomId': typeof AuthRoomRoomIdRoute
  '/room/join/$roomId': typeof AuthRoomJoinRoomIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/sing-out': typeof SingOutRoute
  '/_auth/game_over': typeof AuthGame_overRoute
  '/_auth/room': typeof AuthRoomRoute
  '/demo/clerk': typeof DemoClerkRoute
  '/_auth/room_/$roomId': typeof AuthRoomRoomIdRoute
  '/_auth/room_/join/$roomId': typeof AuthRoomJoinRoomIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/sing-out'
    | '/game_over'
    | '/room'
    | '/demo/clerk'
    | '/room/$roomId'
    | '/room/join/$roomId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/sing-out'
    | '/game_over'
    | '/room'
    | '/demo/clerk'
    | '/room/$roomId'
    | '/room/join/$roomId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/sign-in'
    | '/sign-up'
    | '/sing-out'
    | '/_auth/game_over'
    | '/_auth/room'
    | '/demo/clerk'
    | '/_auth/room_/$roomId'
    | '/_auth/room_/join/$roomId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  SingOutRoute: typeof SingOutRoute
  DemoClerkRoute: typeof DemoClerkRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sing-out': {
      id: '/sing-out'
      path: '/sing-out'
      fullPath: '/sing-out'
      preLoaderRoute: typeof SingOutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/clerk': {
      id: '/demo/clerk'
      path: '/demo/clerk'
      fullPath: '/demo/clerk'
      preLoaderRoute: typeof DemoClerkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/room': {
      id: '/_auth/room'
      path: '/room'
      fullPath: '/room'
      preLoaderRoute: typeof AuthRoomRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/game_over': {
      id: '/_auth/game_over'
      path: '/game_over'
      fullPath: '/game_over'
      preLoaderRoute: typeof AuthGame_overRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/room_/$roomId': {
      id: '/_auth/room_/$roomId'
      path: '/room/$roomId'
      fullPath: '/room/$roomId'
      preLoaderRoute: typeof AuthRoomRoomIdRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/room_/join/$roomId': {
      id: '/_auth/room_/join/$roomId'
      path: '/room/join/$roomId'
      fullPath: '/room/join/$roomId'
      preLoaderRoute: typeof AuthRoomJoinRoomIdRouteImport
      parentRoute: typeof AuthRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthGame_overRoute: typeof AuthGame_overRoute
  AuthRoomRoute: typeof AuthRoomRoute
  AuthRoomRoomIdRoute: typeof AuthRoomRoomIdRoute
  AuthRoomJoinRoomIdRoute: typeof AuthRoomJoinRoomIdRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthGame_overRoute: AuthGame_overRoute,
  AuthRoomRoute: AuthRoomRoute,
  AuthRoomRoomIdRoute: AuthRoomRoomIdRoute,
  AuthRoomJoinRoomIdRoute: AuthRoomJoinRoomIdRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  SingOutRoute: SingOutRoute,
  DemoClerkRoute: DemoClerkRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
